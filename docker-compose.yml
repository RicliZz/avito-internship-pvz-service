networks:
  dev:


services:
  mainApp:
    build:
#      context: build
      dockerfile: ./build/mainApp/Dockerfile
    image: main_app_image
    container_name: main_app
    command: ["sh", "-c", "go run /usr/src/app/cmd/mainApp/main.go"]
    depends_on:
      - postgres
    environment:
      DB_HOST: avito_postgres
      DB_PORT: 5432
      DB_USER: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
    ports:
      - "8080:8080"
    networks:
      - dev

  pvz_v1:
    build:
      dockerfile: ./build/pvz_v1/Dockerfile
    image: pvz_v1
    container_name: pvz_v1
    command: [ "sh", "-c", "go run /usr/src/app/cmd/grpc-pvz/main.go" ]
    depends_on:
      - postgres
    environment:
      DB_HOST: avito_postgres
      DB_PORT: 5432
      DB_USER: "${DB_USERNAME}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
    ports:
      - "3000:3000"
    networks:
      - dev

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9000:9090"
    networks:
      - dev

  postgres:
    image: postgres:latest
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    container_name: avito_postgres
    environment:
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - ./db/migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "avito_internship"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 1m
    restart: unless-stopped
    networks:
      - dev


volumes:
  postgres_data:
